% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_posterior.R
\name{compute_posterior}
\alias{compute_posterior}
\title{Compute the posterior distribution of recurrence states}
\usage{
compute_posterior(y, fs, prior = NULL, return.RG = FALSE)
}
\arguments{
\item{y}{Observed data in the form of a list of lists. The number of entries is the
number of episodes. Each episode is in turn a list of observed alleles
for each marker, or \code{NA} if not observed.}

\item{fs}{List of allele frequencies as vectors. Names of the list must
match with the marker names in \code{y}.}

\item{prior}{Matrix of prior probabilities of the recurrence states for each
recurrent episode. Each row corresponds to an episode. The column names
must be C, L, and I for recrudescence, relapse and reinfection
respectively. If prior is not provided, a uniform prior will be used.}

\item{return.RG}{Boolean for whether to return the relationship graphs,
defaults to \code{FALSE}.}
}
\value{
List containing:
\describe{
\item{marg}{Matrix of marginal posterior probabilities of the possible
recurrence states for each recurrent episode, one row per reinfection.}
\item{joint}{Vector of joint posterior probabilities of each possible string
of recurrence states.}
\item{RGs}{List of relationship graphs with their log-likelihoods stored.
Only returned if \code{return.RG} is \code{TRUE}. See
\code{\link{enumerate_RGs_alt}}.}
}
}
\description{
Entry point to Bayesian inference for \emph{P. vivax} recurrence states based
on genetic data. Specifically, this function finds the posterior
probabilities of relapse, reinfection and recrudescence from genetic data.
}
\details{
We enumerate all possible relationship graphs between genotypes, where each
pair of genotypes may be clones, siblings, or strangers, each with a
different level of expected genetic relatedness. The likelihood of a
sequence of recurrence states can be determined from the likelihood of all
relationship graphs compatible with said sequence. More details on the
enumeration and likelihood calculation of relationship graphs
can be found in \code{\link{enumerate_RGs_alt}} and
\code{\link{RG_inference}} respectively.

Model assumptions:
\itemize{
\item{No genotyping errors or missing alleles}
\item{Parasites are outbred}
\item{Relationship graphs are equally likely given recurrence states}
}
}
\examples{
# Data on an enrollment episode and a recurrence:
y <- list(list(m1 = c("A", "C"), m2 = c("G", "T")), list(m1 = "A", m2 = "G"))

# Allele frequencies:
fs <- list(
  m1 = setNames(c(0.4, 0.6), c("A", "C")),
  m2 = setNames(c(0.2, 0.8), c("G", "T"))
)

# Compute posterior probabilities using default uniform prior, note that
# since there is only one recurrence, the marginal probabilities are the same
# as the joint probabilities:
compute_posterior(y, fs)



#===============================================================================
# compute_posterior() returns the prior when there are either no data whatsoever
# or no recurrent data
#===============================================================================

# Allele frequencies:
fs <- list(m1 = setNames(c(0.25, 0.75), c("A", "Other")))

# Data on an enrollment episode and two recurrences:
ys_no_data_whatsoever <- list(list(m1 = NA), list(m1 = NA), list(m1 = NA))
ys_no_recurrent_data <- list(list(m1 = "A"), list(m1 = NA), list(m1 = NA))

# Prior on two recurrences:
prior <- array(c(0.4,0.4,0.2,0.6,0.4,0), dim = c(2,3),
               dimnames = list(NULL, c("C", "L", "I")))

# Compute posterior probabilities:
post3Rs_no_data_whatsover <- compute_posterior(ys_no_data_whatsoever, fs, prior)
post3Rs_no_recurrent_data <- compute_posterior(ys_no_recurrent_data, fs, prior)

# Compare prior with posterior marginal probabilities:
prior
post3Rs_no_data_whatsover$marg
post3Rs_no_recurrent_data$marg

}
