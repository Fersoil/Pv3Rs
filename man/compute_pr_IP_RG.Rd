% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_pr_IP_RG.R
\name{compute_pr_IP_RG}
\alias{compute_pr_IP_RG}
\title{Compute the probability of an IBD partition given relationship graph}
\usage{
compute_pr_IP_RG(IP, RG)
}
\arguments{
\item{IP}{An IBD partition (IP), which is a \code{partitions} equivalence object; see \code{\link[partitions]{listParts}}.}

\item{RG}{A relationship graph (RG), which is an \code{igraph} graph; see \code{\link[igraph]{igraph}}.}
}
\value{
A probability from 0 to 1
}
\description{
\code{compute_pr_IP_RG} assumes strangers, siblings, and clones are
represented numerically as 0, 0.5 and 1, respectively, and that the
relatedness (probability of IBD) of a given relationship is equal to its
numeric representation, implying that parasite genotypes are sampled from an
outbred population.
}
\examples{

#################################################
# Simple example of computation
#################################################

n_genotypes <- 3
RG <- sample_RG(n_genotypes)
IPs <- partitions::listParts(n_genotypes)
compute_pr_IP_RG(IPs[[1]], RG)
plot_RG(RG)


#################################################
# Checking the computation against simulation
#################################################

# Generate a relationship graph (RG) and enumerate IBD partitions (IPs)
set.seed(3)
RG <- sample_single_recurrence_RG(MOI_init = 5, cause = "reinfection")
IPs <- enumerate_IPs(igraph::vcount(RG))

# Compute the probability of the IPs given the RG
pr_IP_RG <- sapply(IPs, compute_pr_IP_RG, RG)
names(pr_IP_RG) <- sapply(IPs, convert_IP_to_string)

# Make some stores for simulation results
sim_out_fr <- sim_in_fr <- pr_IP_RG
sim_out_fr[] <- sim_in_fr[] <- 0

# Compute the frequency of simulated IPs given the RG graph and
# outbred population (well specified setting)
simulated_out <- sapply(1:100, function(j) {
     convert_IP_to_string(sample_IPs_given_RG(RG))})
simulated_out_fr <- table(simulated_out)/100
sim_out_fr[names(simulated_out_fr)] <- simulated_out_fr

# Compute the frequency of simulated IPs given the RG graph and
# inbred population (miss specified setting))
simulated_in <- sapply(1:100, function(j) {
     convert_IP_to_string(sample_IPs_given_RG(RG, FALSE, lineage_count = 10))})
simulated_in_fr <- table(simulated_in)/100
sim_in_fr[names(simulated_in_fr)] <- simulated_in_fr

# Plot agreement and relationship graph
par(mfrow = c(1,2), pty = "s")
max_xy <- max(c(pr_IP_RG, sim_out_fr, sim_in_fr))
plot(x = pr_IP_RG,
     y = as.vector(sim_out_fr[names(pr_IP_RG)]),
     xlab = "Probability", ylab = "Frequency",
     xlim = c(0, max_xy + 0.1),
     ylim = c(0, max_xy + 0.1),
     pch = 4)
points(x = pr_IP_RG,
y = as.vector(sim_in_fr[names(pr_IP_RG)]), col = "red")
abline(a = 0, b = 1)
legend("topleft", pch = c(1,4), col = c(1:2),
       legend = c("well-specified", "miss-specified"),
       cex = 0.75, inset = 0.01)
plot_RG(RG)


}
